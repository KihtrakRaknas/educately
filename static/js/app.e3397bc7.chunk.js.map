{"version":3,"sources":["components/ClassButton.js","components/Tilt.js","components/TiltCard.js","themeStyles.js","screens/HomeScreen.js","screens/CoursesScreen.js","screens/SectionsScreen.js","screens/SectionItemsScreen.js","screens/LessonViewerScreen.js","App.js","web-build/register-service-worker.js"],"names":["ClassButton","Component","TouchableScale","friction","tension","activeScale","linearGradientProps","colors","start","end","leftAvatar","this","props","img","rounded","source","uri","title","name","titleStyle","color","fontWeight","subtitleStyle","subtitle","progress","ViewComponent","LinearGradient","chevron","containerStyle","borderRadius","onPress","console","log","courseID","navigation","navigate","content","sectionID","lessonID","React","round","n","Math","floor","Tilt","state","gyro","Accelerometer","setUpdateInterval","_subscription","addListener","accelerometerData","setState","remove","x","y","styles","z","transform","perspective","rotateX","rotateY","View","style","children","TiltCard","marginBottom","paddingVertical","themeStyles","StyleSheet","create","darkB","backgroundColor","lightB","darkF","lightF","themeB","colorScheme","themeF","HomeScreen","subscription","Appearance","addChangeListener","getColorScheme","ScrollView","container","Text","fontSize","textAlign","flexDirection","padding","paddingRight","justifyContent","marginHorizontal","flex","width","borderWidth","marginTop","paddingHorizontal","StatusBar","CoursesScreen","classes","AsyncStorage","getItem","then","courseNames","JSON","parse","fetch","res","stringify","json","courseIDs","Set","course","add","push","Promise","all","metaObj","item","meta_key","meta_value","twoObjects","filter","e","setItem","alignItems","ActivityIndicator","size","paddingTop","FlatList","data","renderItem","margin","post_title","post_excerpt","ID","thumbnail","post_content","keyExtractor","SectionsScreen","sections","parseRes","route","params","sort","item1","item2","section_order","setOptions","sectionsRes","ListHeaderComponent","section_name","section_description","section_id","SectionItemsScreen","sectionItems","item_order","item_id","post_type","substring","charAt","toUpperCase","slice","LessonViewerScreen","lesson","replace","str","indexOf","length","split","map","match","join","html","imagesMaxWidth","Dimensions","get","tagsStyles","p","paddingLeft","renderers","yt","htmlAttribs","Platform","OS","videoId","id","opts","height","playerVars","autoplay","modestbranding","rel","play","initialPlayerParams","cc_lang_pref","showClosedCaptions","Drawer","createDrawerNavigator","Stack","createStackNavigator","headerProps","headerStyle","headerTintColor","headerRight","TouchableOpacity","toggleDrawer","Octicons","Home","Navigator","Screen","component","options","Courses","App","useColorScheme","NavigationContainer","initialRouteName","drawerType","drawerPosition","drawerStyle","drawerContentOptions","activeTintColor","activeBackgroundColor","inactiveTintColor","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"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","file":"static/js/app.e3397bc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Accelerometer } from 'expo-sensors';\r\nimport { ListItem, withTheme } from 'react-native-elements'\r\nimport TouchableScale from 'react-native-touchable-scale';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nexport default class ClassButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <ListItem\r\n                Component={TouchableScale}\r\n                friction={1}\r\n                tension={100}\r\n                activeScale={0.90} //\r\n                linearGradientProps={{\r\n                    colors: ['#FF9800', '#F44336'],\r\n                    start: [1, 0],\r\n                    end: [0.2, 0],\r\n                }}\r\n                leftAvatar={this.props.img?{ rounded: true, source: { uri: this.props.img } }:null}\r\n                title={this.props.name}\r\n                titleStyle={{ color: 'white', fontWeight: 'bold' }}\r\n                subtitleStyle={{ color: 'white' }}\r\n                subtitle={this.props.progress}\r\n                ViewComponent={LinearGradient}\r\n                chevron={{ color: 'white' }}\r\n                containerStyle={{borderRadius:5}}\r\n                onPress={()=>{\r\n                    console.log(this.props.courseID)\r\n                    if(this.props.courseID)\r\n                        this.props.navigation.navigate('Sections', { title:this.props.name, courseID: this.props.courseID, content:this.props.content})\r\n                    else if(this.props.sectionID)\r\n                        this.props.navigation.navigate('SectionItems', { title:this.props.name, sectionID: this.props.sectionID})\r\n                    else if(this.props.lessonID)  \r\n                        this.props.navigation.navigate('LessonViewer', { title:this.props.name, lessonID: this.props.lessonID})\r\n                }}\r\n            />\r\n        )   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Accelerometer } from 'expo-sensors';\r\n\r\nfunction round(n) {\r\n    if (!n) {\r\n      return 0;\r\n    }\r\n  \r\n    return Math.floor(n * 100) / 100;\r\n  }\r\n\r\nexport default class Tilt extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          gyro: {}\r\n        }\r\n    \r\n        Accelerometer.setUpdateInterval(16);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._subscription = Accelerometer.addListener(accelerometerData => {\r\n            this.setState({\r\n                gyro: accelerometerData\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._subscription && this._subscription.remove();\r\n        this._subscription = null;\r\n    }\r\n\r\n    render(){\r\n        const { x, y, z } = this.state.gyro;\r\n        //console.log(round(x)+\" \"+round(y)+\" \"+round(z))\r\n        const styles = {\r\n          transform: [\r\n            {perspective: 300 },\r\n            {rotateX: `${round(y)*5}deg` },\r\n            {rotateY: `${round(x)*5}deg` },\r\n          ]\r\n        }\r\n        return (\r\n            <View style={styles}>\r\n                {this.props.children}\r\n            </View>\r\n        )   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View } from 'react-native';\r\nimport TouchableScale from 'react-native-touchable-scale';\r\nimport Tilt from '../components/Tilt'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default class TiltCard extends React.Component {\r\n    render(){\r\n        return (\r\n            <Tilt>\r\n                <TouchableScale friction={90} tension={100} activeScale={0.90} style={{marginBottom:10}}>\r\n                    <LinearGradient colors= {['#c9e265', '#38b6ff']} start= {[1, 1]} end= {[0, 0]} style={{borderRadius:5}}>    \r\n                        <View style={{paddingVertical:10}}>\r\n                            {this.props.children}\r\n                        </View>\r\n                    </LinearGradient>\r\n                </TouchableScale>\r\n            </Tilt> \r\n        )   \r\n    }\r\n}\r\n","import { StyleSheet} from 'react-native';\r\nconst themeStyles = StyleSheet.create({\r\n    darkB:{\r\n        backgroundColor: \"#000000\",\r\n    },\r\n    lightB:{\r\n        backgroundColor: '#fff',\r\n    },\r\n    darkF:{\r\n        color:\"white\"\r\n    },\r\n    lightF:{\r\n        color:\"black\"\r\n    }\r\n});\r\n\r\nfunction themeB(colorScheme){\r\n    return colorScheme=='dark'?themeStyles.darkB:themeStyles.lightB;\r\n}\r\n\r\nfunction themeF(colorScheme){\r\n    return colorScheme=='dark'?themeStyles.darkF:themeStyles.lightF;\r\n}\r\n\r\nexport {themeStyles, themeB, themeF};","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport { AppearanceProvider, useColorScheme ,Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            console.log(colorScheme)\r\n            this.setState({})\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme()\r\n        return (\r\n            <ScrollView style={[themeB(colorScheme),styles.container]}>\r\n                <TiltCard>\r\n                    <Text style={{ color: 'white', fontWeight: 'bold', fontSize: 40, textAlign:\"center\"}}>Welcome back!</Text>\r\n                    <Text style={{ color: 'white' , fontSize: 30, textAlign:\"center\"}}>Insert Name Here</Text>\r\n                </TiltCard>\r\n                <TiltCard>\r\n                    <View style={{flexDirection:'row-reverse'}}>\r\n                        <View style={{padding:5, paddingRight:20, justifyContent:'center'}}>\r\n                            <Text style={{fontSize:40, color:\"white\", fontWeight:\"bold\"}}>97</Text>\r\n                        </View>\r\n                        <View style={{marginHorizontal:10, flex:1}}>\r\n                            <Text style={{ color: 'white', fontSize: 25, marginBottom:10}}>Points Earned:</Text>\r\n                            <ProgressBar progress={0.3} width={null} borderWidth={2}/>\r\n                            <Text style={{ color: 'white', fontSize: 20}}>Level: 5</Text>\r\n                        </View>\r\n                    </View>\r\n                </TiltCard>\r\n                <Text style={[themeF(colorScheme),{ fontSize: 25, marginBottom:10, marginTop:20, paddingHorizontal:10, textAlign:\"center\"}]}>Suggested for you:</Text>\r\n                <ClassButton name=\"Chemistry\" progress=\"Not Started\"/>\r\n                <StatusBar style=\"auto\" />\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding:10\r\n    }\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class CoursesScreen extends React.Component {\r\n    state={\r\n        classes:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n\r\n        AsyncStorage.getItem('courseNames').then((courseNames)=>{\r\n            if(courseNames)\r\n                this.setState({classes:JSON.parse(courseNames)})\r\n        })\r\n        fetch('https://www.educately.co/mobile_app_api.php?data=sections').then(res=>{console.log(\"res: \"+JSON.stringify(res));return res.json()}).then(res=>{\r\n            let courseIDs=new Set();\r\n            for(let course of res)\r\n                courseIDs.add(course[\"section_course_id\"])\r\n            let courseNames=[]\r\n            for(let courseID of courseIDs)\r\n                courseNames.push(Promise.all([fetch('https://www.educately.co/mobile_app_api.php?data=id&id='+courseID).then(res=>res.json()).then(res=>{\r\n                    if(res[0][\"post_status\"]==\"trash\")\r\n                        return null\r\n                    return res[0]\r\n                }),fetch('https://www.educately.co/mobile_app_api.php?data=post_meta&id='+courseID).then(res=>res.json()).then(res=>{\r\n                    let metaObj = {}\r\n                    for(let item of res)\r\n                        metaObj[item.meta_key] = item.meta_value\r\n                    return metaObj\r\n                }).then(metaObj=>metaObj[\"_thumbnail_id\"]?fetch('https://www.educately.co/mobile_app_api.php?data=post_meta&id='+metaObj[\"_thumbnail_id\"]).then(res=>res.json()).then(res=>{\r\n                    for(let item of res)\r\n                        if(item[\"meta_key\"]==\"_wp_attached_file\"){\r\n                            metaObj[\"thumbnail\"]=\"https://www.educately.co/wp-content/uploads/\"+item[\"meta_value\"]\r\n                            break;\r\n                        }\r\n                    return metaObj\r\n                }):metaObj)]).then(twoObjects=>twoObjects[0]?Object.assign({}, twoObjects[0], twoObjects[1]):null))\r\n            Promise.all(courseNames).then(courseNames=>{\r\n                courseNames = courseNames.filter(e=>e!=null);\r\n                console.log(courseNames)\r\n                this.setState({classes:courseNames})\r\n                AsyncStorage.setItem('courseNames', JSON.stringify(courseNames))\r\n            })\r\n            AsyncStorage.setItem('sectionsRes', JSON.stringify(res))\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.classes==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator style={themeF(colorScheme)} size=\"large\" />\r\n                    <Text style={[themeF(colorScheme),{paddingTop:10}]}>Retrieving a List of all courses</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    style={themeB(colorScheme)}\r\n                    data={this.state.classes}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.post_title} progress={item.post_excerpt} navigation={this.props.navigation} courseID={item.ID} img={item.thumbnail} content={item.post_content}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.ID}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    }\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\n\r\nexport default class SectionsScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        sections:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n        AsyncStorage.getItem('sectionsRes').then((sectionsRes)=>{\r\n            if(sectionsRes)\r\n                this.parseRes(JSON.parse(sectionsRes));\r\n        })\r\n        fetch('https://www.educately.co/mobile_app_api.php?data=sections').then(res=>res.json()).then(res=>{\r\n            this.parseRes(res);\r\n            AsyncStorage.setItem('sectionsRes', JSON.stringify(res))\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    parseRes=(res)=>{\r\n        let sections=[];\r\n        for(let course of res){\r\n            if(course[\"section_course_id\"]==this.props.route.params.courseID)\r\n                sections.push(course)\r\n        }\r\n        sections.sort((item1,item2)=>item1.section_order-item2.section_order)\r\n        console.log(sections)\r\n        this.setState({sections})\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.sections==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator style={themeF(colorScheme)} size=\"large\" />\r\n                    <Text style={[themeF(colorScheme),{paddingTop:10}]}>Retrieving the sections in {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    ListHeaderComponent={this.props.route.params.content?<View style={{margin:10}}><TiltCard><Text style={{fontSize:20, margin:10}}>{this.props.route.params.content}</Text></TiltCard></View>:null}\r\n                    data={this.state.sections}\r\n                    style={themeB(colorScheme)}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.section_name} progress={item.section_description} navigation={this.props.navigation} sectionID={item.section_id}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.section_id}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class SectionItemsScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"title\"+this.props.route.params.title)\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        sectionItems:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n        AsyncStorage.getItem('sectionItems'+this.props.route.params.sectionID).then((sectionItems)=>{\r\n            if(sectionItems)\r\n                this.setState({sectionItems:JSON.parse(sectionItems)})\r\n        })\r\n        fetch('https://www.educately.co/mobile_app_api.php?data=section_items&id='+this.props.route.params.sectionID).then(res=>res.json()).then(res=>{\r\n            res.sort((item1,item2)=>item1.item_order-item2.item_order)\r\n            console.log(res)\r\n            let sectionItems=[]\r\n            for(let item of res)\r\n                sectionItems.push(fetch('https://www.educately.co/mobile_app_api.php?data=id&id='+item.item_id).then(res=>res.json()).then(res=>{AsyncStorage.setItem('lessonRes'+item.item_id, JSON.stringify(res[0]));return res[0]}))\r\n            Promise.all(sectionItems).then((sectionItems)=>{\r\n                console.log(sectionItems)\r\n                this.setState({sectionItems})\r\n                AsyncStorage.setItem('sectionItems'+this.props.route.params.sectionID, JSON.stringify(sectionItems))\r\n            })\r\n        })\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.sectionItems==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator style={themeF(colorScheme)} size=\"large\" />\r\n                    <Text style={[themeF(colorScheme),{paddingTop:10}]}>Retrieving the items in {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    style={themeB(colorScheme)}\r\n                    data={this.state.sectionItems}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.post_title} progress={item.post_type.substring(3).charAt(0).toUpperCase() + item.post_type.substring(3).slice(1)} navigation={this.props.navigation} lessonID={item.ID}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.ID}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList, Dimensions, Platform } from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport HTML from 'react-native-render-html';\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport YouTube from 'react-youtube';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class LessonViewerScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"title\"+this.props.route.params.title)\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        lesson:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState();\r\n        });\r\n        AsyncStorage.getItem('lessonRes'+this.props.route.params.lessonID).then((lesson)=>{\r\n            if(lesson)\r\n                this.setState({lesson:JSON.parse(lesson)})\r\n        })\r\n        fetch('https://www.educately.co/mobile_app_api.php?data=id&id='+this.props.route.params.lessonID).then(res=>res.json()).then(res=>{\r\n            res[0][\"post_content\"] = res[0][\"post_content\"].replace(/\\[embed\\].*v=.*\\[\\/embed\\]/g,(str)=>{\r\n                console.log(str)\r\n                let id = str.substring(str.indexOf(\"v=\")+\"v=\".length,str.indexOf(\"[/embed]\"))\r\n                return `<yt id=${id}></yt>`\r\n            })\r\n            res[0][\"post_content\"] = res[0][\"post_content\"].replace(/\\[embed\\].*\\[\\/embed\\]/g,(str)=>{\r\n                console.log(str)\r\n                let url = str.substring(str.indexOf(\"[embed]\")+\"[embed]\".length,str.indexOf(\"[/embed]\"))\r\n                return `<iframe src=${url}></iframe>`\r\n            })\r\n            res[0][\"post_content\"]=res[0][\"post_content\"].split(\"\\n\").map((item)=>{console.log(item+\": \"+item.match(/<.*>.*<\\/.*>/g));return item.match(/<.*>.*<\\/.*>/g)&&item.match(/<.*>.*<\\/.*>/g).length>0?item:`<p>${item}</p>`}).join(\"\")\r\n            console.log(res[0][\"post_content\"])\r\n            this.setState({lesson:res[0]})\r\n            AsyncStorage.setItem('lessonRes'+this.props.route.params.lessonID, JSON.stringify(res[0]))\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.lesson==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator style={themeF(colorScheme)} size=\"large\" />\r\n                    <Text style={[themeF(colorScheme),{paddingTop:10}]}>Retrieving {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        console.log(this.state.lesson.post_content)\r\n        return (\r\n            <ScrollView style={themeB(colorScheme)}>\r\n                <HTML html={this.state.lesson.post_content} imagesMaxWidth={Dimensions.get('window').width} tagsStyles={{p:Object.assign({},themeF(colorScheme),{fontSize:20, paddingLeft:10, paddingRight:10})}} renderers={{\r\n                    yt: (htmlAttribs) => {console.log(JSON.stringify(htmlAttribs));return (Platform.OS === 'web'?\r\n                    <YouTube videoId={htmlAttribs.id} opts={{\r\n                        height: ''+Dimensions.get('window').width/16*9,\r\n                        width: '100%',\r\n                        playerVars: {\r\n                            autoplay: 1,\r\n                            modestbranding: 1,\r\n                            rel:0,\r\n                        }\r\n                    }}/>:<YoutubePlayer\r\n                        height={Dimensions.get('window').width/16*9}\r\n                        width={Dimensions.get('window').width}\r\n                          videoId={htmlAttribs.id}\r\n                          play={true}\r\n                          initialPlayerParams={{\r\n                              cc_lang_pref: \"us\",\r\n                              showClosedCaptions:true,\r\n                              modestbranding: true,\r\n                              //color:\"white\",\r\n                              rel:false,\r\n                          }} \r\n                      />)}\r\n                }}/>\r\n                <View style={{height:40}}/>\r\n                <StatusBar style=\"auto\" />\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button, TouchableOpacity, Dimensions } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CoursesScreen from \"./screens/CoursesScreen\";\nimport SectionsScreen from \"./screens/SectionsScreen\";\nimport SectionItemsScreen from \"./screens/SectionItemsScreen\";\nimport LessonViewerScreen from \"./screens/LessonViewerScreen\";\nimport { Octicons } from '@expo/vector-icons';\nimport { AppearanceProvider, useColorScheme, Appearance} from 'react-native-appearance';\nimport {themeB, themeF} from './themeStyles'\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\nconst headerProps = (title, navigation) => ({\n  //title: title,\n  headerStyle: {\n    backgroundColor: '#9edeb3',\n  },\n  headerTintColor: '#fff',\n\n  headerRight: () => Dimensions.get('window').width >= 768?null:(\n    <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n      <Octicons name=\"three-bars\" size={24} color=\"white\" style={{paddingRight:20}}/>\n    </TouchableOpacity>\n  ),\n})\n\nfunction Home(){\n  return(\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={HomeScreen} options={({ navigation })=>headerProps('Home', navigation)}/>\n    </Stack.Navigator>\n  )\n}\n\nfunction Courses(){\n  return(\n    <Stack.Navigator>\n      <Stack.Screen name=\"Courses\" component={CoursesScreen} options={({ navigation })=>headerProps('Courses', navigation)}/>\n      <Stack.Screen name=\"Sections\" component={SectionsScreen} options={({ navigation })=>headerProps('Sections', navigation)}/>\n      <Stack.Screen name=\"SectionItems\" component={SectionItemsScreen} options={({ navigation })=>headerProps('SectionItems', navigation)}/>\n      <Stack.Screen name=\"LessonViewer\" component={LessonViewerScreen} options={({ navigation })=>headerProps('LessonViewer', navigation)}/>\n    </Stack.Navigator>\n  )\n}\n\nexport default function App() {\n  let colorScheme = useColorScheme();\n  return (\n    <AppearanceProvider>\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Drawer.Navigator initialRouteName=\"Home\" drawerType={Dimensions.get('window').width >= 768 ? 'permanent' : 'front'} drawerPosition=\"right\"   drawerStyle={themeB(colorScheme)} drawerContentOptions={colorScheme==\"dark\"?{activeTintColor:\"white\", activeBackgroundColor:\"grey\", inactiveTintColor:\"grey\"}:null}>\n          <Drawer.Screen name=\"Home\" component={Home}/>\n          <Drawer.Screen name=\"Courses\" component={Courses}/>\n        </Drawer.Navigator>\n      </NavigationContainer>\n    </AppearanceProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('./expo-service-worker.js', { scope: './' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}