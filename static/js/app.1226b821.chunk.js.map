{"version":3,"sources":["components/ClassButton.js","components/Tilt.js","components/TiltCard.js","themeStyles.js","screens/HomeScreen.js","screens/CoursesScreen.js","screens/SectionsScreen.js","screens/SectionItemsScreen.js","screens/LessonViewerScreen.js","App.js","web-build/register-service-worker.js"],"names":["ClassButton","Component","TouchableScale","friction","tension","activeScale","linearGradientProps","colors","start","end","leftAvatar","rounded","source","uri","title","this","props","name","titleStyle","color","fontWeight","subtitleStyle","subtitle","progress","chevron","containerStyle","borderRadius","onPress","console","log","courseID","navigation","navigate","sectionID","lessonID","React","round","n","Math","floor","Tilt","state","gyro","Accelerometer","setUpdateInterval","_subscription","addListener","accelerometerData","setState","remove","x","y","styles","z","transform","perspective","rotateX","rotateY","View","style","children","TiltCard","marginBottom","LinearGradient","paddingVertical","themeStyles","StyleSheet","create","darkB","backgroundColor","lightB","darkF","lightF","themeB","colorScheme","themeF","HomeScreen","subscription","Appearance","addChangeListener","getColorScheme","ScrollView","container","Text","fontSize","textAlign","flexDirection","padding","paddingRight","justifyContent","marginHorizontal","flex","width","borderWidth","marginTop","paddingHorizontal","StatusBar","CoursesScreen","classes","AsyncStorage","getItem","then","courseNames","JSON","parse","fetch","res","stringify","json","courseIDs","Set","course","add","push","id","Promise","all","filter","e","setItem","alignItems","ActivityIndicator","size","paddingTop","FlatList","data","renderItem","item","margin","keyExtractor","SectionsScreen","sections","parseRes","route","params","sort","item1","item2","section_order","setOptions","sectionsRes","section_name","section_description","section_id","SectionItemsScreen","sectionItems","item_order","item_id","post_title","post_type","substring","charAt","toUpperCase","slice","ID","LessonViewerScreen","lesson","replace","str","indexOf","length","split","map","match","join","post_content","html","imagesMaxWidth","Dimensions","get","tagsStyles","p","paddingLeft","renderers","yt","htmlAttribs","height","videoId","play","initialPlayerParams","cc_lang_pref","showClosedCaptions","modestbranding","rel","Drawer","createDrawerNavigator","Stack","createStackNavigator","headerProps","headerStyle","headerTintColor","headerRight","TouchableOpacity","toggleDrawer","Octicons","Home","Navigator","Screen","component","options","Courses","App","NavigationContainer","initialRouteName","drawerType","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"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","file":"static/js/app.1226b821.chunk.js","sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Accelerometer } from 'expo-sensors';\r\nimport { ListItem, withTheme } from 'react-native-elements'\r\nimport TouchableScale from 'react-native-touchable-scale';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nexport default class ClassButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <ListItem\r\n                Component={TouchableScale}\r\n                friction={1}\r\n                tension={100}\r\n                activeScale={0.90} //\r\n                linearGradientProps={{\r\n                    colors: ['#FF9800', '#F44336'],\r\n                    start: [1, 0],\r\n                    end: [0.2, 0],\r\n                }}\r\n                leftAvatar={{ rounded: true, source: { uri: \"https://jobs.newscientist.com/getasset/c40a5488-11be-43b0-843f-a2e6ef9f0612/\" } }}\r\n                title={this.props.name}\r\n                titleStyle={{ color: 'white', fontWeight: 'bold' }}\r\n                subtitleStyle={{ color: 'white' }}\r\n                subtitle={this.props.progress}\r\n                chevron={{ color: 'white' }}\r\n                containerStyle={{borderRadius:5}}\r\n                onPress={()=>{\r\n                    console.log(this.props.courseID)\r\n                    if(this.props.courseID)\r\n                        this.props.navigation.navigate('Sections', { title:this.props.name, courseID: this.props.courseID})\r\n                    else if(this.props.sectionID)\r\n                        this.props.navigation.navigate('SectionItems', { title:this.props.name, sectionID: this.props.sectionID})\r\n                    else if(this.props.lessonID)  \r\n                        this.props.navigation.navigate('LessonViewer', { title:this.props.name, lessonID: this.props.lessonID})\r\n                }}\r\n            />\r\n        )   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Accelerometer } from 'expo-sensors';\r\n\r\nfunction round(n) {\r\n    if (!n) {\r\n      return 0;\r\n    }\r\n  \r\n    return Math.floor(n * 100) / 100;\r\n  }\r\n\r\nexport default class Tilt extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          gyro: {}\r\n        }\r\n    \r\n        Accelerometer.setUpdateInterval(16);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._subscription = Accelerometer.addListener(accelerometerData => {\r\n            this.setState({\r\n                gyro: accelerometerData\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._subscription && this._subscription.remove();\r\n        this._subscription = null;\r\n    }\r\n\r\n    render(){\r\n        const { x, y, z } = this.state.gyro;\r\n        //console.log(round(x)+\" \"+round(y)+\" \"+round(z))\r\n        const styles = {\r\n          transform: [\r\n            {perspective: 300 },\r\n            {rotateX: `${round(y)*5}deg` },\r\n            {rotateY: `${round(x)*5}deg` },\r\n          ]\r\n        }\r\n        return (\r\n            <View style={styles}>\r\n                {this.props.children}\r\n            </View>\r\n        )   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport { View } from 'react-native';\r\nimport TouchableScale from 'react-native-touchable-scale';\r\nimport Tilt from '../components/Tilt'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default class TiltCard extends React.Component {\r\n    render(){\r\n        return (\r\n            <Tilt>\r\n                <TouchableScale friction={90} tension={100} activeScale={0.90} style={{marginBottom:10}}>\r\n                    <LinearGradient colors= {['#c9e265', '#38b6ff']} start= {[1, 1]} end= {[0, 0]} style={{borderRadius:5}}>    \r\n                        <View style={{paddingVertical:10}}>\r\n                            {this.props.children}\r\n                        </View>\r\n                    </LinearGradient>\r\n                </TouchableScale>\r\n            </Tilt> \r\n        )   \r\n    }\r\n}\r\n","import { StyleSheet} from 'react-native';\r\nconst themeStyles = StyleSheet.create({\r\n    darkB:{\r\n        backgroundColor: \"#000000\",\r\n        color:\"white\"\r\n    },\r\n    lightB:{\r\n        backgroundColor: '#fff',\r\n        color:\"black\"\r\n    },\r\n    darkF:{\r\n        color:\"white\"\r\n    },\r\n    lightF:{\r\n        color:\"black\"\r\n    }\r\n});\r\n\r\nfunction themeB(colorScheme){\r\n    return colorScheme=='dark'?themeStyles.darkB:themeStyles.lightB;\r\n}\r\n\r\nfunction themeF(colorScheme){\r\n    return colorScheme=='dark'?themeStyles.darkF:themeStyles.lightF;\r\n}\r\n\r\nexport {themeStyles, themeB, themeF};","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport { AppearanceProvider, useColorScheme ,Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            console.log(colorScheme)\r\n            this.setState({})\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme()\r\n        return (\r\n            <ScrollView style={[themeB(colorScheme),styles.container]}>\r\n                <TiltCard>\r\n                    <Text style={{ color: 'white', fontWeight: 'bold', fontSize: 40, textAlign:\"center\"}}>Welcome back!</Text>\r\n                    <Text style={{ color: 'white' , fontSize: 30, textAlign:\"center\"}}>Insert Name Here</Text>\r\n                </TiltCard>\r\n                <TiltCard>\r\n                    <View style={{flexDirection:'row-reverse'}}>\r\n                        <View style={{padding:5, paddingRight:20, justifyContent:'center'}}>\r\n                            <Text style={{fontSize:40, color:\"white\", fontWeight:\"bold\"}}>97</Text>\r\n                        </View>\r\n                        <View style={{marginHorizontal:10, flex:1}}>\r\n                            <Text style={{ color: 'white', fontSize: 25, marginBottom:10}}>Points Earned:</Text>\r\n                            <ProgressBar progress={0.3} width={null} borderWidth={2}/>\r\n                            <Text style={{ color: 'white', fontSize: 20}}>Level: 5</Text>\r\n                        </View>\r\n                    </View>\r\n                </TiltCard>\r\n                <Text style={[themeF(colorScheme),{ fontSize: 25, marginBottom:10, marginTop:20, paddingHorizontal:10, textAlign:\"center\"}]}>Suggested for you:</Text>\r\n                <ClassButton name=\"Chemistry\" progress=\"Not Started\"/>\r\n                <StatusBar style=\"auto\" />\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding:10\r\n    }\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class CoursesScreen extends React.Component {\r\n    state={\r\n        classes:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n\r\n        AsyncStorage.getItem('courseNames').then((courseNames)=>{\r\n            if(courseNames)\r\n                this.setState({classes:JSON.parse(courseNames)})\r\n        })\r\n        fetch('http://www.educately.co/mobile_app_api.php?data=sections').then(res=>{console.log(\"res: \"+JSON.stringify(res));return res.json()}).then(res=>{\r\n            let courseIDs=new Set();\r\n            for(let course of res)\r\n                courseIDs.add(course[\"section_course_id\"])\r\n            let courseNames=[]\r\n            for(let courseID of courseIDs)\r\n                courseNames.push(fetch('http://www.educately.co/mobile_app_api.php?data=id&id='+courseID).then(res=>res.json()).then(res=>{\r\n                    /*if(res[0][\"post_status\"]==\"trash\")\r\n                        return null*/\r\n                    return {name: res[0]['post_title'], id:courseID}\r\n                }))\r\n            Promise.all(courseNames).then(courseNames=>{\r\n                courseNames = courseNames.filter(e=>e!=null);\r\n                console.log(\"done\")\r\n                console.log(courseNames)\r\n                this.setState({classes:courseNames})\r\n                AsyncStorage.setItem('courseNames', JSON.stringify(courseNames))\r\n            })\r\n            AsyncStorage.setItem('sectionsRes', JSON.stringify(res))\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.classes==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator size=\"large\" />\r\n                    <Text style={{paddingTop:10}}>Retrieving a List of all courses</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    style={themeB(colorScheme)}\r\n                    data={this.state.classes}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.name} progress=\"IDK\" navigation={this.props.navigation} courseID={item.id}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.id}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    }\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\n\r\nexport default class SectionsScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"title\"+this.props.route.params.title)\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        sections:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n        AsyncStorage.getItem('sectionsRes').then((sectionsRes)=>{\r\n            if(sectionsRes)\r\n                this.parseRes(JSON.parse(sectionsRes));\r\n        })\r\n        fetch('http://www.educately.co/mobile_app_api.php?data=sections').then(res=>res.json()).then(res=>{\r\n            this.parseRes(res);\r\n            AsyncStorage.setItem('sectionsRes', JSON.stringify(res))\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    parseRes=(res)=>{\r\n        let sections=[];\r\n        for(let course of res){\r\n            console.log(course[\"section_course_id\"] +\"-\"+ JSON.stringify(this.props.route.params))\r\n            if(course[\"section_course_id\"]==this.props.route.params.courseID)\r\n                sections.push(course)\r\n        }\r\n        sections.sort((item1,item2)=>item1.section_order-item2.section_order)\r\n        console.log(sections)\r\n        this.setState({sections})\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.sections==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator size=\"large\" />\r\n                    <Text style={{paddingTop:10}}>Retrieving the sections in {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    data={this.state.sections}\r\n                    style={themeB(colorScheme)}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.section_name} progress={item.section_description} navigation={this.props.navigation} sectionID={item.section_id}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.section_id}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList} from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class SectionItemsScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"title\"+this.props.route.params.title)\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        sectionItems:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n        AsyncStorage.getItem('sectionItems'+this.props.route.params.sectionID).then((sectionItems)=>{\r\n            if(sectionItems)\r\n                this.setState({sectionItems:JSON.parse(sectionItems)})\r\n        })\r\n        fetch('http://www.educately.co/mobile_app_api.php?data=section_items&id='+this.props.route.params.sectionID).then(res=>res.json()).then(res=>{\r\n            res.sort((item1,item2)=>item1.item_order-item2.item_order)\r\n            console.log(res)\r\n            let sectionItems=[]\r\n            for(let item of res)\r\n                sectionItems.push(fetch('http://www.educately.co/mobile_app_api.php?data=id&id='+item.item_id).then(res=>res.json()).then(res=>{return res[0]}))\r\n            Promise.all(sectionItems).then((sectionItems)=>{\r\n                console.log(sectionItems)\r\n                this.setState({sectionItems})\r\n                AsyncStorage.setItem('sectionItems'+this.props.route.params.sectionID, JSON.stringify(sectionItems))\r\n            })\r\n        })\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.sectionItems==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator size=\"large\" />\r\n                    <Text style={{paddingTop:10}}>Retrieving the items in {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        return (\r\n            <View style={[themeB(colorScheme),styles.container]}>\r\n                <FlatList\r\n                    style={themeB(colorScheme)}\r\n                    data={this.state.sectionItems}\r\n                    renderItem={({ item }) => (\r\n                        <View style={{margin:10}}><ClassButton name={item.post_title} progress={item.post_type.substring(3).charAt(0).toUpperCase() + item.post_type.substring(3).slice(1)} navigation={this.props.navigation} lessonID={item.ID}/></View>\r\n                    )}\r\n                    keyExtractor={(item) => item.ID}\r\n                    //ItemSeparatorComponent={({ highlighted }) => (<View style={{height:20}}></View>)}\r\n                />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, ActivityIndicator, FlatList, Dimensions } from 'react-native';\r\nimport ClassButton from '../components/ClassButton';\r\nimport TiltCard from '../components/TiltCard';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\nimport HTML from 'react-native-render-html';\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport {Appearance} from 'react-native-appearance';\r\nimport {themeB, themeF} from '../themeStyles'\r\n\r\nexport default class LessonViewerScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"title\"+this.props.route.params.title)\r\n        this.props.navigation.setOptions({ title: this.props.route.params.title})\r\n    }\r\n    state={\r\n        lesson:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.subscription = Appearance.addChangeListener(({ colorScheme }) => {\r\n            this.setState({});\r\n        });\r\n        AsyncStorage.getItem('lessonRes'+this.props.route.params.lessonID).then((lesson)=>{\r\n            if(lesson)\r\n                this.setState({lesson:JSON.parse(lesson)})\r\n        })\r\n        fetch('http://www.educately.co/mobile_app_api.php?data=id&id='+this.props.route.params.lessonID).then(res=>res.json()).then(res=>{\r\n            res[0][\"post_content\"] = res[0][\"post_content\"].replace(/\\[embed\\].*v=.*\\[\\/embed\\]/g,(str)=>{\r\n                console.log(str)\r\n                let id = str.substring(str.indexOf(\"v=\")+\"v=\".length,str.indexOf(\"[/embed]\"))\r\n                return `<yt id=${id}></yt>`\r\n            })\r\n            res[0][\"post_content\"] = res[0][\"post_content\"].replace(/\\[embed\\].*\\[\\/embed\\]/g,(str)=>{\r\n                console.log(str)\r\n                let url = str.substring(str.indexOf(\"[embed]\")+\"[embed]\".length,str.indexOf(\"[/embed]\"))\r\n                return `<iframe src=${url}></iframe>`\r\n            })\r\n            res[0][\"post_content\"]=res[0][\"post_content\"].split(\"\\n\").map((item)=>{console.log(item+\": \"+item.match(/<.*>.*<\\/.*>/g));return item.match(/<.*>.*<\\/.*>/g)&&item.match(/<.*>.*<\\/.*>/g).length>0?item:`<p>${item}</p>`}).join(\"\")\r\n            console.log(res[0][\"post_content\"])\r\n            this.setState({lesson:res[0]})\r\n            AsyncStorage.setItem('lessonRes'+this.props.route.params.lessonID, JSON.stringify(res[0]))\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.subscription.remove()\r\n    }\r\n\r\n    render(){\r\n        let colorScheme = Appearance.getColorScheme();\r\n        if(this.state.lesson==null)\r\n            return (\r\n                <View style={[themeB(colorScheme),{      \r\n                    flex: 1,\r\n                    padding:10,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }]}>\r\n                    <ActivityIndicator size=\"large\" />\r\n                    <Text style={{paddingTop:10}}>Retrieving {this.props.route.params.title}</Text>\r\n                </View>\r\n            )\r\n        console.log(this.state.lesson.post_content)\r\n        return (\r\n            <ScrollView style={themeB(colorScheme)}>\r\n                <HTML html={this.state.lesson.post_content} imagesMaxWidth={Dimensions.get('window').width} tagsStyles={{p:[themeF(colorScheme),{fontSize:20, paddingLeft:10, paddingRight:10}]}} renderers={{\r\n                    yt: (htmlAttribs) => {console.log(JSON.stringify(htmlAttribs));return   (<YoutubePlayer\r\n                        height={Dimensions.get('window').width/16*9}\r\n                        width={Dimensions.get('window').width}\r\n                          videoId={htmlAttribs.id}\r\n                          play={true}\r\n                          initialPlayerParams={{\r\n                              cc_lang_pref: \"us\",\r\n                              showClosedCaptions:true,\r\n                              modestbranding: true,\r\n                              //color:\"white\",\r\n                              rel:false,\r\n                          }} \r\n                      />)}\r\n                }}/>\r\n                <View style={{height:40}}/>\r\n                <StatusBar style=\"auto\" />\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n});","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button, TouchableOpacity, Dimensions } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CoursesScreen from \"./screens/CoursesScreen\";\nimport SectionsScreen from \"./screens/SectionsScreen\";\nimport SectionItemsScreen from \"./screens/SectionItemsScreen\";\nimport LessonViewerScreen from \"./screens/LessonViewerScreen\";\nimport { Octicons } from '@expo/vector-icons';\nimport { AppearanceProvider, useColorScheme } from 'react-native-appearance';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\nconst headerProps = (title, navigation) => ({\n  //title: title,\n  headerStyle: {\n    backgroundColor: '#9edeb3',\n  },\n  headerTintColor: '#fff',\n\n  headerRight: () => Dimensions.get('window').width >= 768?null:(\n    <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n      <Octicons name=\"three-bars\" size={24} color=\"white\" style={{paddingRight:20}}/>\n    </TouchableOpacity>\n  ),\n})\n\nfunction Home(){\n  return(\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={HomeScreen} options={({ navigation })=>headerProps('Home', navigation)}/>\n    </Stack.Navigator>\n  )\n}\n\nfunction Courses(){\n  return(\n    <Stack.Navigator>\n      <Stack.Screen name=\"Courses\" component={CoursesScreen} options={({ navigation })=>headerProps('Courses', navigation)}/>\n      <Stack.Screen name=\"Sections\" component={SectionsScreen} options={({ navigation })=>headerProps('Sections', navigation)}/>\n      <Stack.Screen name=\"SectionItems\" component={SectionItemsScreen} options={({ navigation })=>headerProps('SectionItems', navigation)}/>\n      <Stack.Screen name=\"LessonViewer\" component={LessonViewerScreen} options={({ navigation })=>headerProps('LessonViewer', navigation)}/>\n    </Stack.Navigator>\n  )\n}\n\nexport default function App() {\n  return (\n    <AppearanceProvider>\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Drawer.Navigator initialRouteName=\"Home\" drawerType={Dimensions.get('window').width >= 768 ? 'permanent' : 'front'}>\n          <Drawer.Screen name=\"Home\" component={Home}/>\n          <Drawer.Screen name=\"Courses\" component={Courses}/>\n        </Drawer.Navigator>\n      </NavigationContainer>\n    </AppearanceProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/mobile/expo-service-worker.js', { scope: '/mobile/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}